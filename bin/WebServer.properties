# This is a sample configuration file for HTTPWebServer

# Secure connection
HTTPWebServer.https = false
# Server name (for UI only)
HTTPWebServer.name = TestWebServer.com
# Valid Server url
HTTPWebServer.url = testwebserver.com
# External port. To disable automatic UPnP mapping set it to 0.
HTTPWebServer.portUPnP = 8080
# Server port.
HTTPWebServer.port = 8080
# Session lifetime in minutes from last request
HTTPWebServer.timeOut = 20
# Session constant lifetime in minutes. 0 means not restricted
HTTPWebServer.lifeTime = 0
# Time between generating new session and csrf ids in minutes
HTTPWebServer.changeIdTimeOut = 1
# Time the link in the activation email stays valid in minutes
HTTPWebServer.activationTimeOut = 60
# Page that redirects from /
HTTPWebServer.defaultPage = /index.html
# Opens 'localhost:port' in firefox for testing
HTTPWebServer.testLocalhost = true
# Default date format rule
HTTPWebServer.dateFormat = "%H:%M:%S %W, %e %b %y"
# Default date time zone (Leave commented for UTC)
#HTTPWebServer.dateTimeZone = 2

# Sql database connection
HTTPWebServer.sql.connector = SQLite
HTTPWebServer.sql.connectionString = data.db
#HTTPWebServer.sql.connector = MySQL
#HTTPWebServer.sql.connectionString = host=127.0.0.1;user=root;password=root;db=data;compress=true;auto-reconnect=true
HTTPWebServer.sql.minSessions = 1
HTTPWebServer.sql.maxSessions = 32
HTTPWebServer.sql.idleTime = 60

# This example uses 'www.gmail.com' for SMTP
# If email does not sends try this:
# https://accounts.google.com/DisplayUnlockCaptcha.
HTTPWebServer.smtp.host = smtp.gmail.com
HTTPWebServer.smtp.port = 587
HTTPWebServer.smtp.username = username
HTTPWebServer.smtp.password = password

# Add some emoticons
HTTPWebServer.emoticon1 = :D, images/emoticon-happy.png
HTTPWebServer.emoticon2 = :(, images/emoticon-unhappy.png
HTTPWebServer.emoticon3 = :o, images/emoticon-surprised.png
HTTPWebServer.emoticon4 = :p, images/emoticon-tongue.png
HTTPWebServer.emoticon5 = ;), images/emoticon-wink.png
HTTPWebServer.emoticon6 = :), images/emoticon-smile.png

openSSL.server.privateKeyFile = ${application.configDir}any.pem
openSSL.server.caConfig = ${application.configDir}rootcert.pem
openSSL.server.verificationMode = relaxed
openSSL.server.verificationDepth = 9
openSSL.server.loadDefaultCAFile = true
openSSL.server.cipherList = ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH
openSSL.server.privateKeyPassphraseHandler.name = KeyFileHandler
openSSL.server.privateKeyPassphraseHandler.options.password = secret
openSSL.server.invalidCertificateHandler.name = AcceptCertificateHandler
openSSL.server.extendedVerification = false
openSSL.server.cacheSessions = true
openSSL.server.sessionIdContext = ${application.name}
openSSL.server.sessionCacheSize = 100
openSSL.server.requireTLSv1 = false

logging.loggers.root.channel.class = ConsoleChannel
logging.loggers.app.name = Application
logging.loggers.app.channel = c1
logging.formatters.f1.class = PatternFormatter
logging.formatters.f1.pattern = [%p] %t
logging.channels.c1.class = ConsoleChannel
logging.channels.c1.formatter = f1
